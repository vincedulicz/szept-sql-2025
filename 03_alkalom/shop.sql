drop table if exists OrderItem cascade;drop table if exists Orders cascade;drop table if exists CustomerServiceTicket cascade;drop table if exists Employee cascade;drop table if exists Product cascade;drop table if exists Customer cascade;drop table if exists Shop cascade;create table Shop(	shop_id SERIAL primary key,	name varchar(100) not null,	address varchar(255),	phone varchar(50));create table Product(	product_id SERIAL primary key,	shop_id INT,	product_name varchar(100) not null,	price decimal(10, 2) not null,	stock int not null,	foreign key (shop_id) references Shop(shop_id));create table Customer(	customer_id serial primary key,	name varchar(100) not null,	email varchar(100),	phone varchar(50));create table Employee(	employee_id serial primary key,	shop_id int,	name varchar(100) not null,	position varchar(50),	salary decimal(10,2),	foreign key (shop_id) references Shop(shop_id));create table Orders(	order_id serial primary key,	customer_id int,	shop_id int,	order_date date,	total_amount decimal(10,2),	foreign key (customer_id) references Customer(customer_id),	foreign key (shop_id) references Shop(shop_id));create table OrderItem(	order_item_id serial primary key,	order_id int,	product_id int,	quantity int,	unit_price decimal(10,2),	foreign key (order_id) references Orders(order_id),	foreign key (product_id) references Product(product_id));create table CustomerServiceTicket(	ticket_id serial primary key,	customer_id int,	employee_id int,	issue_description text,	status varchar(50),	foreign key (customer_id) references Customer(customer_id),	foreign key (employee_id) references Employee(employee_id));insert into Shop (name, address, phone) values('Central Shop', '123 Main St, City', '123-456-7890'),('North Branch', '456 North Rd, City', '234-567-8901'),('South Branch', '789 South Ave, City', '345-678-9012'),('East Branch', '101 East St, City', '456-789-0123');insert into product (shop_id, product_name, price, stock) values(1, 'laptop', 1200.00, 10),(1, 'smartphone', 800.00, 20),(2, 'tablet', 400.00, 15),(3, 'headphone', 150.00, 30),(4, 'smartwatch', 250.00, 25);insert into customer (name, email, phone) values('Alice Smith', 'alice@example.com', '111-222-3333'),('Bob Johnson', 'bob@example.com', '222-333-4444'),('Charlie Davis', 'charlie@example.com', '333-444-5555'),('Diana Prince', 'diana@example.com', '444-555-6666');insert into employee (shop_id, name, position, salary) values(1, 'Eve Adams', 'Manager', 3000.00),(1, 'Frank Miller', 'Sales', 2000.00),(2, 'Grace Lee', 'Support', 2200.00),(3, 'Henry Brown', 'Cashier', 1800.00),(4, 'Ivy Wilson', 'Manager', 3200.00);insert into orders (customer_id, shop_id, order_date, total_amount) values(1, 1, '2025-01-01', 2000.00),(2, 1, '2025-01-05', 800.00),(3, 2, '2025-01-10', 400.00),(4, 3, '2025-01-15', 150.00);insert into orderitem (order_id, product_id, quantity, unit_price) values(1, 1, 1, 1200.00),  -- 1 db laptop(1, 2, 1, 800.00),   -- 1 db smartphone(2, 2, 1, 800.00),   -- 1 db smartphone(3, 3, 1, 400.00),   -- 1 db tablet(4, 4, 1, 150.00);   -- 1 db headphoneinsert into customerserviceticket (customer_id, employee_id, issue_description, status) values(1, 3, 'Issue with product delivery', 'Open'),(2, 2, 'Payment not processed', 'Closed'),(3, NULL, 'Request for product information', 'Pending'),(4, 4, 'Defective product received', 'Resolved');-------------------------------------------------------------------------------------------------------------------alter table Shop add column email varchar(100);update shopset email = lower(replace(name, ' ', '')) || '@shop.com';alter table product alter column price type decimal(12,2);update employeeset salary = salary * 1.05where position = 'Sales';update productset stock = stock - 2where stock > 20;delete from orderitemwhere order_item_id = 5;-----------------------------------------------------------------------------------------------------------------------select o.order_id, o.order_date, c.name as custome_name, s.name as shop_name, o.total_amountfrom orders oinner join customer c on o.customer_id = c.customer_idinner join shop s on o.shop_id = s.shop_id;select p.product_id, p.product_name, p.price, s.name as shop_namefrom product pleft join shop s on p.shop_id = s.shop_id;select e.employee_id, e.name as employee_name, s.name as shop_name, e.positionfrom employee eright join shop s on e.shop_id = s.shop_id;select c.name as customer_name, t.issue_description , t.status, e.name as employee_namefrom customer cfull outer join customerserviceticket t on c.customer_id = t.customer_idfull outer join employee e on t.employee_id = e.employee_id;select c.name as customer_name, o.order_id, o.order_date, sum(oi.quantity) as total_items, o.total_amountfrom orders oinner join customer c on o.customer_id = c.customer_idinner join orderitem oi on o.order_id = o.order_idgroup by c.name, o.order_id, o.order_date, o.total_amount;select c.name, sum(o.total_amount) as total_spentfrom customer cinner join orders o on c.customer_id = o.customer_idgroup by c.nameorder by total_spent desclimit 3;with ProdutCount as (	select		shop_id,		sum(stock) as total_stock		from product		group by shop_id)selects.shop_id,s.name as shop_name,pc.total_stockfrom shop sleft join ProdutCount pc on s.shop_id = pc.shop_id;select	o.order_id,	c.name as customer_name,	s.name as shop_name,	p.product_name,	e.name as service_employee,	o.order_date,	o.total_amountfrom orders oinner join customer c on o.customer_id = c.customer_idinner join shop s on o.shop_id = s.shop_idinner join orderitem oi on o.order_id = oi.order_idinner join product p on oi.product_id = p.product_idleft join customerserviceticket t on c.customer_id = t.customer_idleft join employee e on t.employee_id = e.employee_id;-----------------------------------------------------------------------------------------------------------------------alter table employee add column hire_date date;update employeeset hire_date = '2025-09-22'where hire_date is null;alter table customerserviceticket rename column issue_description to description;update customerserviceticketset status = 'In Review'where status = 'Pending';